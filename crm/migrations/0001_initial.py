# Generated by Django 2.0.6 on 2018-07-07 09:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ControlTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Control Table',
            },
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_id', models.IntegerField(auto_created=True)),
                ('bugzilla_id', models.CharField(blank=True, max_length=32, null=True)),
                ('category', models.SmallIntegerField(choices=[(0, 'HW'), (1, 'Key_Component'), (2, 'FW'), (3, 'Driver'), (4, 'SW'), (5, 'ME')], verbose_name='Category')),
                ('attribute', models.SmallIntegerField(choices=[(0, '[HW]Main Board'), (1, '[HW]Daughter Board'), (2, '[HW]Signal Integrity'), (3, '[HW]Antenna'), (4, '[HW]EMC/Safety'), (5, '[HW]Thermal'), (6, '[HW]Acoustic'), (7, '[HW]Others'), (8, '[KC]Chipset'), (9, '[KC]CPU/APU'), (10, '[KC]VGA'), (11, '[KC]Memory'), (12, '[KC]HDD/SDD/mSATA'), (13, '[KC]ODD'), (14, '[KC]Panel'), (15, '[KC]Touch Panel'), (16, '[KC]Camera'), (17, '[KC]Card Reader'), (18, '[KC]LAN'), (19, '[KC]WLAN'), (20, '[KC]BlueTooth'), (21, '[KC]Micphone'), (22, '[KC]KB/Mouse'), (23, '[KC]Remote Control'), (24, '[KC]Adapter/PSU'), (25, '[KC]USB'), (26, '[KC]Audio'), (27, '[KC]Speaker'), (28, '[KC]Sensor'), (29, '[KC]NFC'), (30, '[KC]TPM'), (31, '[KC]Others'), (32, '[FW]BIOS'), (33, '[FW]EC'), (34, '[FW]Inter ME'), (35, '[FW]Others'), (36, '[Driver]Chipset'), (37, '[Driver]CPU/APU'), (38, '[Driver]VGA'), (39, '[Driver]Touch Panel'), (40, '[Driver]Camera'), (41, '[Driver]Card Reader'), (42, '[Driver]LAN'), (43, '[Driver]WLAN'), (44, '[Driver]BlueTooth'), (45, '[Driver]Hot Key'), (46, '[Driver]Audio'), (47, '[Driver]Sensor'), (48, '[Driver]Others'), (49, '[SW]OS'), (50, '[SW]Application'), (51, '[SW]Preload'), (52, '[ME]Structure'), (53, '[ME]Cosmetic'), (54, '[ME]Cable'), (55, '[ME]Parts'), (56, '[ME]Packing'), (57, '[ME]ID'), (58, '[ME]Others')], verbose_name='attribute')),
                ('attribute_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='ex. Intel, AMI')),
                ('severity', models.SmallIntegerField(choices=[(0, '1'), (1, '2'), (2, '3'), (3, '4')], verbose_name='severity')),
                ('description', models.TextField(blank=True, max_length=2048, null=True)),
                ('procedure', models.TextField(blank=True, max_length=2048, null=True)),
                ('comment', models.TextField(blank=True, max_length=2048, null=True)),
                ('root_cause', models.TextField(blank=True, max_length=2048, null=True)),
                ('solution', models.TextField(blank=True, max_length=2048, null=True)),
                ('status', models.SmallIntegerField(choices=[(0, 'Open'), (1, 'Closed'), (2, 'Verify'), (3, 'Limitation')], verbose_name='status')),
                ('solving_type', models.SmallIntegerField(choices=[(0, 'Fixed'), (1, 'Spec Changed'), (2, 'Design'), (3, 'Limitation'), (4, 'Deferred'), (5, 'Withdraw'), (6, 'Duplicated'), (7, 'Cannot Duplicated')])),
                ('open_date', models.DateField()),
                ('verify_date', models.DateField()),
                ('close_date', models.DateField()),
                ('Owner', models.CharField(blank=True, max_length=64, null=True)),
                ('motherboard_version', models.CharField(blank=True, max_length=32, null=True)),
                ('bios_version', models.CharField(blank=True, max_length=32, null=True)),
                ('os_version', models.CharField(blank=True, max_length=64, null=True)),
                ('remark', models.TextField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=256, unique=True)),
                ('project_name', models.CharField(blank=True, max_length=64, null=True)),
                ('test_leader_whq', models.CharField(blank=True, max_length=64, null=True)),
                ('schedule_start', models.DateField(verbose_name='开始日期')),
                ('schedule_end', models.DateField(verbose_name='结束日期')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
                ('Team_number', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.CharField(max_length=64, unique=True)),
                ('case_name', models.CharField(blank=True, max_length=256, null=True)),
                ('procedure', models.CharField(blank=True, max_length=2048, null=True)),
                ('pass_criteria', models.CharField(blank=True, max_length=2048, null=True)),
                ('test_plan_pic_path', models.CharField(blank=True, max_length=256, null=True)),
                ('function', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='crm.Function')),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_result', models.SmallIntegerField(choices=[(0, 'Pass'), (1, 'Fail'), (2, 'N/A')])),
                ('issue_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Issue')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Project')),
                ('test_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.TestCase', verbose_name='test case')),
            ],
            options={
                'verbose_name_plural': '测试结果',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
                ('job_number', models.CharField(max_length=32, unique=True)),
                ('shot_number', models.CharField(blank=True, max_length=32, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=64, null=True)),
                ('university', models.CharField(blank=True, max_length=128, null=True)),
                ('major', models.CharField(blank=True, max_length=128, null=True)),
                ('belong_to_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Team')),
                ('role', models.ManyToManyField(to='crm.Role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='testresult',
            name='tester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile'),
        ),
        migrations.AddField(
            model_name='team',
            name='Team_leader',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile'),
        ),
        migrations.AddField(
            model_name='project',
            name='test_leader_wzs',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile'),
        ),
        migrations.AddField(
            model_name='issue',
            name='submitter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile', verbose_name='bug 提交人'),
        ),
        migrations.AddField(
            model_name='controltable',
            name='function',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='crm.Function'),
        ),
        migrations.AddField(
            model_name='controltable',
            name='project_name',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='crm.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='testresult',
            unique_together={('project', 'test_case')},
        ),
        migrations.AlterUniqueTogether(
            name='controltable',
            unique_together={('project_name', 'function')},
        ),
    ]
